<!-- views/register.ejs -->
<!DOCTYPE html>
<html lang="de" class="light">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Schoolnote.eu - Registrierung</title>
  <link href="/css/login/styles.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.28.0/feather.min.js"></script>
</head>
<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-200">
  <!-- Main Container - Split Screen -->
  <div class="flex">
    <!-- Left: Image (fixed, hidden on small screens) -->
    <div class="w-1/2 fixed top-0 bottom-0 left-0 hidden lg:block overflow-hidden">
      <img src="/images/background.webp" alt="Schoolnote Background" class="object-cover w-full h-full">
      <!-- Gradient Overlay -->
      <div class="absolute inset-0 bg-gradient-to-r from-amber-600/40 to-amber-500/30"></div>
      <!-- Logo Overlay -->
      <div class="absolute top-8 left-8 p-1 bg-white/80 backdrop-blur-sm rounded-lg shadow-xl">
        <img class="h-10 w-auto" src="/images/logo.png" alt="Schoolnote.eu Logo">
      </div>
    </div>
    
    <!-- Right: Registration Form (scrollable) -->
    <div class="w-full lg:w-1/2 lg:ml-auto min-h-screen bg-white dark:bg-gray-900 relative">
      <!-- Subtle left edge shadow for better transition -->
      <div class="absolute inset-y-0 left-0 w-4 bg-gradient-to-r from-black/5 to-transparent dark:from-white/5 hidden lg:block"></div>
      
      <!-- Content area -->
      <div class="px-8 md:px-16 lg:px-24 xl:px-32 py-12">
        <div class="w-full max-w-md mx-auto">
          <div class="text-center mb-8">
            <!-- Only show logo on small screens where the left panel is hidden -->
            <div class="inline-flex p-3 bg-amber-50 dark:bg-amber-900/30 rounded-xl mb-6 lg:hidden">
              <img class="h-12 w-auto" src="/images/logo.png" alt="Schoolnote.eu Logo">
            </div>
            <h2 class="text-3xl font-bold text-gray-800 dark:text-white">
              Konto erstellen
            </h2>
            <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">Beginne mit schoolnote.eu</p>
          </div>
          
          <% if (typeof error !== 'undefined' && error) { %>
            <div class="bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500 text-red-700 dark:text-red-400 p-3 mb-6 rounded-md flex items-start text-sm" role="alert">
              <div class="text-red-500 dark:text-red-400 mr-2 mt-0.5 flex-shrink-0">
                <i data-feather="alert-circle" class="h-4 w-4"></i>
              </div>
              <div>
                <p class="font-medium">Fehler</p>
                <p><%= error %></p>
              </div>
            </div>
          <% } %>
          
          <form class="space-y-5" action="/register" method="POST" id="registerForm">
            <div class="space-y-1">
              <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">E-Mail-Adresse</label>
              <div class="relative group">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400 dark:text-gray-500 group-focus-within:text-amber-500 dark:group-focus-within:text-amber-400 transition-colors duration-200">
                  <i data-feather="mail" class="h-4 w-4"></i>
                </div>
                <input id="email" name="email" type="email" required
                       class="block w-full pl-10 pr-3 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500 text-gray-900 dark:text-white text-sm transition-all duration-200 shadow-sm"
                       placeholder="name@schule.de" autocomplete="email">
              </div>
              <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Diese E-Mail wird für den Login verwendet</p>
            </div>
            
            <div class="space-y-1">
              <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Passwort</label>
              <div class="relative group">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400 dark:text-gray-500 group-focus-within:text-amber-500 dark:group-focus-within:text-amber-400 transition-colors duration-200">
                  <i data-feather="lock" class="h-4 w-4"></i>
                </div>
                <input id="password" name="password" type="password" required
                       class="block w-full pl-10 pr-10 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500 text-gray-900 dark:text-white text-sm transition-all duration-200 shadow-sm"
                       placeholder="Mindestens 8 Zeichen" autocomplete="new-password">
                <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-400 focus:outline-none transition-colors duration-200">
                  <i data-feather="eye" class="h-4 w-4"></i>
                </button>
              </div>
              <div class="password-strength hidden mt-2">
                <div class="progress-container h-1 w-full bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden">
                  <div class="progress-bar h-full bg-red-500 rounded-full" style="width: 0%"></div>
                </div>
                <p class="text-xs text-gray-500 dark:text-gray-400 mt-1 password-feedback"></p>
              </div>
            </div>
            
            <div class="space-y-1">
              <label for="confirmPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Passwort bestätigen</label>
              <div class="relative group">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400 dark:text-gray-500 group-focus-within:text-amber-500 dark:group-focus-within:text-amber-400 transition-colors duration-200">
                  <i data-feather="check-circle" class="h-4 w-4"></i>
                </div>
                <input id="confirmPassword" name="confirmPassword" type="password" required
                       class="block w-full pl-10 pr-3 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500 text-gray-900 dark:text-white text-sm transition-all duration-200 shadow-sm"
                       placeholder="Passwort wiederholen" autocomplete="new-password">
              </div>
            </div>

            <div class="flex items-start">
              <div class="flex items-center h-5">
                <input id="agreeTerms" name="agreeTerms" type="checkbox" required
                       class="h-4 w-4 text-amber-600 focus:ring-amber-500 border-gray-300 dark:border-gray-700 rounded transition-colors duration-200">
              </div>
              <div class="ml-2 text-sm">
                <label for="agreeTerms" class="text-gray-700 dark:text-gray-300">
                  Ich stimme den <a href="/nutzungsbedingungen" class="text-amber-600 dark:text-amber-400 hover:text-amber-700 dark:hover:text-amber-300 transition-colors duration-200">Nutzungsbedingungen</a> und der <a href="/datenschutz" class="text-amber-600 dark:text-amber-400 hover:text-amber-700 dark:hover:text-amber-300 transition-colors duration-200">Datenschutzerklärung</a> zu
                </label>
              </div>
            </div>

            <div class="pt-2">
              <button type="submit"
                      class="w-full flex justify-center items-center py-3 px-4 border border-transparent rounded-lg shadow-md text-sm font-medium text-white bg-amber-500 hover:bg-amber-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-all duration-200 transform hover:translate-y-[-1px] hover:shadow-lg">
                <span>Registrieren</span>
                <i data-feather="user-plus" class="h-4 w-4 ml-2"></i>
              </button>
            </div>
          </form>
          
          <div class="mt-8 text-center">
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Bereits registriert?
              <a href="/" class="font-medium text-amber-600 dark:text-amber-400 hover:text-amber-700 dark:hover:text-amber-300 transition-colors duration-200">
                Jetzt anmelden
              </a>
            </p>
          </div>
          
          <div class="mt-6 pt-5 border-t border-gray-200 dark:border-gray-700">
            <div class="flex justify-center space-x-8 text-sm text-gray-500 dark:text-gray-400">
              <a href="/datenschutz" class="hover:text-amber-600 dark:hover:text-amber-400 transition-colors duration-200">Datenschutz</a>
              <a href="/impressum" class="hover:text-amber-600 dark:hover:text-amber-400 transition-colors duration-200">Impressum</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Feather Icons initialisieren
      feather.replace();
      
      // Systemeinstellung für Dark Mode übernehmen
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      
      // Auf Änderungen der Systemeinstellung reagieren
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
        if (event.matches) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      });
      
      // Passwort anzeigen/verbergen
      const togglePassword = document.getElementById('togglePassword');
      const passwordInput = document.getElementById('password');
      
      if (togglePassword && passwordInput) {
        togglePassword.addEventListener('click', function() {
          const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
          passwordInput.setAttribute('type', type);
          
          // Icon ändern
          const iconName = type === 'password' ? 'eye' : 'eye-off';
          this.innerHTML = '';
          const icon = feather.icons[iconName].toSvg({ class: 'h-4 w-4' });
          this.innerHTML = icon;
        });
      }
      
      // Passwort-Stärke
      if (passwordInput) {
        const strengthContainer = document.querySelector('.password-strength');
        const progressBar = document.querySelector('.progress-bar');
        const feedback = document.querySelector('.password-feedback');
        
        passwordInput.addEventListener('input', function() {
          const password = this.value;
          let strength = 0;
          let feedback_text = '';
          
          if (password.length > 0) {
            strengthContainer.classList.remove('hidden');
            
            // Länge
            if (password.length >= 8) {
              strength += 25;
            }
            
            // Buchstaben und Zahlen
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) {
              strength += 25;
            }
            
            // Zahlen
            if (/[0-9]/.test(password)) {
              strength += 25;
            }
            
            // Sonderzeichen
            if (/[^a-zA-Z0-9]/.test(password)) {
              strength += 25;
            }
            
            // Feedback-Text
            if (strength < 25) {
              feedback_text = 'Sehr schwach';
              progressBar.style.backgroundColor = '#ef4444'; // red-500
            } else if (strength < 50) {
              feedback_text = 'Schwach';
              progressBar.style.backgroundColor = '#f97316'; // orange-500
            } else if (strength < 75) {
              feedback_text = 'Mittel';
              progressBar.style.backgroundColor = '#eab308'; // yellow-500
            } else {
              feedback_text = 'Stark';
              progressBar.style.backgroundColor = '#22c55e'; // green-500
            }
          } else {
            strengthContainer.classList.add('hidden');
          }
          
          progressBar.style.width = strength + '%';
          feedback.textContent = feedback_text;
        });
      }
      
      // Formularvalidierung
      const registerForm = document.getElementById('registerForm');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      
      if (registerForm && passwordInput && confirmPasswordInput) {
        registerForm.addEventListener('submit', function(e) {
          if (passwordInput.value !== confirmPasswordInput.value) {
            e.preventDefault();
            
            // Erstelle eine Fehlermeldung statt einem Alert
            const errorMessage = document.createElement('div');
            errorMessage.className = 'bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500 text-red-700 dark:text-red-400 p-3 mb-6 rounded-md flex items-start text-sm';
            errorMessage.setAttribute('role', 'alert');
            
            // Icon-Container
            const iconContainer = document.createElement('div');
            iconContainer.className = 'text-red-500 dark:text-red-400 mr-2 mt-0.5 flex-shrink-0';
            
            // Feather-Icon
            const icon = document.createElement('i');
            icon.setAttribute('data-feather', 'alert-circle');
            icon.className = 'h-4 w-4';
            
            // Text-Container
            const textContainer = document.createElement('div');
            
            // Überschrift
            const heading = document.createElement('p');
            heading.className = 'font-medium';
            heading.textContent = 'Fehler';
            
            // Fehlermeldung
            const message = document.createElement('p');
            message.textContent = 'Die Passwörter stimmen nicht überein.';
            
            // Alles zusammenfügen
            iconContainer.appendChild(icon);
            textContainer.appendChild(heading);
            textContainer.appendChild(message);
            errorMessage.appendChild(iconContainer);
            errorMessage.appendChild(textContainer);
            
            // Fehlermeldung einfügen
            const form = registerForm;
            form.insertBefore(errorMessage, form.firstChild);
            
            // Feather-Icons für das neue Element initialisieren
            feather.replace();
            
            // Auf das Eingabefeld fokussieren
            confirmPasswordInput.focus();
          }
        });
      }
    });
  </script>
  <style>
    /* Dark Mode Styles */
    .dark {
      color-scheme: dark;
    }
  </style>
</body>
</html>